(()=>{var e={118:(e,t,o)=>{const r=o(112),n=o(834);e.exports=()=>{const e=r(),t=r("computer"),o=14,s=()=>e,a=()=>t;let i=s(),l=a();const c=()=>i,d=()=>l,h=()=>{const e=c();i=l,l=e};let p=null;const g=()=>p,u=e=>{p=e},m=()=>{if(s().getGameBoard().allShipsSunk()||a().getGameBoard().allShipsSunk())return!0;for(let e=0;e<o+1;e+=1)for(let t=0;t<o+1;t+=1)if("empty"===s().getGameBoard().getGrid()[e][t][0])return!1;return!0},f=()=>{m()&&(a().getGameBoard().allShipsSunk()&&!s().getGameBoard().allShipsSunk()?alert("Congratulations, you've won!"):s().getGameBoard().allShipsSunk()&&!a().getGameBoard().allShipsSunk()?alert("Sorry, you've lost"):alert("The game is a draw"))},y=()=>{const e=d().getGameBoard();let t=Math.floor(Math.random()*(o+1)),r=Math.floor(Math.random()*(o+1));for(;"empty"!==e.getGrid()[t][r][0]&&"o"!==e.getGrid()[t][r][0];)t=Math.floor(Math.random()*(o+1)),r=Math.floor(Math.random()*(o+1));return[t,r]},S=()=>{const e=d().getGameBoard(),t=null!==g()?(()=>{const e=d().getGameBoard(),t=g(),r=t[0],n=t[1],s=[[r+1,n],[r-1,n],[r,n+1],[r,n-1]],a=[];for(let t=0;t<s.length;t+=1){const r=s[t][0],n=s[t][1];r>=0&&r<=o&&n>=0&&n<=o&&("empty"===e.getGrid()[r][n][0]||"o"===e.getGrid()[r][n][0])&&a.push(s[t])}return 0===a.length?y():a[Math.floor(Math.random()*a.length)]})():y();e.receiveAttack(t),function(e){const t=document.getElementsByClassName(`${JSON.stringify(e)}`)[0];t.classList.contains("o")?(t.innerHTML="x",t.classList.remove("o"),t.classList.add("x")):t.classList.contains("empty")&&(t.innerHTML=".",t.classList.remove("empty"),t.classList.add("missed"))}(t),"x"===e.getGrid()[t[0]][t[1]][0]?u(t):u(null),h()},L=e=>{const t=d().getGameBoard();function o(t,o,r){e.target.innerHTML=t,e.target.classList.remove(o),e.target.classList.add(r)}JSON.stringify(c())===JSON.stringify(s())&&function(r){let n;e.target.classList.contains("o")?(n=r(e),t.receiveAttack(n),o("x","o","x")):e.target.classList.contains("empty")&&(n=r(e),t.receiveAttack(n),o(".","empty","missed"))}((function(e){let t;for(let o=0;o<e.target.classList.length;o+=1){const r=e.target.classList[o];"["===r[0]&&(t=JSON.parse(r))}return t})),h()},w=e=>{const t=n().getShipTypeLength(e),o=prompt(`Enter the beginning coordinates for your ${e} of length ${t}`);if(!/\[[^\]]*\]/i.test(o))throw new Error("Invalid coordinate input. Please write your coordinate as [#, #]");return JSON.parse(o)},G=(e,t,r)=>{const a=n().getShipTypeLength(r),i=[];if("row"===t){let t=e[1];for(let r=0;r<a;r+=1){if(!(t>=0&&t<=o))throw new Error("The board cannot accomodate your ship's entire length at the proposed coordinates.");if(i.push([e[0],t]),null!==s().getGameBoard().getShipIdxfromGridCoords([e[0],t]))throw new Error("There is already a ship on one of the proposed coordinates");t+=1}}else if("col"===t){let t=e[0];for(let r=0;r<a;r+=1){if(!(t>=0&&t<=o))throw new Error("The board cannot accomodate your ship's entire length at the proposed coordinates.");if(i.push([t,e[1]]),null!==s().getGameBoard().getShipIdxfromGridCoords([t,e[1]]))throw new Error("There is already a ship on one of the proposed coordinates");t+=1}}for(let e=0;e<i.length;e+=1){const t=i[e];document.getElementsByClassName(JSON.stringify(t))[0].classList.add("demo")}return setTimeout((function(){const o=prompt('Is this position ok? Write in "yes" or "no".');if("yes"===o.toLowerCase()){const e=Array.from(document.getElementsByClassName("demo"));for(let t=0;t<e.length;t+=1){const o=e[t];o.classList.remove("demo"),o.classList.add("o"),o.innerHTML="o"}}else{if("no"!==o.toLowerCase())throw new Error('Invalid input. Please type "yes" or "no"');{const e=Array.from(document.getElementsByClassName("demo"));for(let t=0;t<e.length;t+=1)e[t].classList.remove("demo");const o=w(r);G(o,t,r)}}return e}),1e3),e},C=()=>{const e=document.querySelector(".grid-container"),t=s().getGameBoard().getGrid();for(let o=0;o<t.length;o+=1)for(let r=0;r<t.length;r+=1){const t=document.createElement("div");t.classList.add("empty"),t.classList.add(JSON.stringify([o,r])),e.appendChild(t)}if((()=>{!function(){const e=document.createElement("div");e.id="axis-placement-container";const t=document.createElement("div");t.id="button-container";const o=document.createElement("button");o.classList.add("row"),o.innerHTML="Row";const r=document.createElement("button");r.classList.add("col"),r.innerHTML="Column",t.appendChild(o),t.appendChild(r);const n=document.createElement("p");n.innerHTML="Toggle if you would like your ship to align along the row or column",e.appendChild(n),e.appendChild(t),document.querySelector("body").prepend(e)}();const e=document.querySelector("div#button-container");let t=!1;const o=["carrier","battleship","cruiser","submarine","destroyer"];let r=0;return e.addEventListener("click",(function(e){if(!t){let a;e.target.classList.contains("row")?a="row":e.target.classList.contains("col")&&(a="col");const i=w(o[r]);if(null!==s().getGameBoard().getShipIdxfromGridCoords(i))throw new Error("There is a ship already there. Please enter another coordinate.");const l=G(i,a,o[r]),c=n().getShipTypeLength(o[r]);if("row"===a){let e=l[1];for(let t=0;t<c;t+=1){const t=[l[0],e];if(console.log(`currCoord ${t}`),null!==s().getGameBoard().getShipIdxfromGridCoords(t))throw new Error("There is a ship already there. Please enter another coordinate.");e+=1}}else if("col"===a){let e=l[1];for(let t=0;t<c;t+=1){const t=[e,l[1]];if(null!==s().getGameBoard().getShipIdxfromGridCoords(t))throw new Error("There is a ship already there. Please enter another coordinate.");e+=1}}if(s().getGameBoard().placeShip(c,l,a),r+=1,r===o.length){let e=!0;document.querySelector(".opponent-grid-container").addEventListener("click",(t=>{!t.target.classList.contains("o")&&!t.target.classList.contains("empty")||e||(L(t),m()&&(e=!0,f()),setTimeout(S,0),m()&&(e=!0,f()))})),t=!0}}})),t})())for(let e=0;e<t.length;e+=1)for(let o=0;o<t.length;o+=1){const r=document.getElementsByClassName(JSON.stringify([e,o]))[0];"empty"!==t[e][o][0]&&(r.innerHTML=t[e][o][0]),r.classList.add(t[e][o][0])}},B=()=>{const e=document.querySelector(".opponent-grid-container"),t=a().getGameBoard(),r=a().getGameBoard().getGrid();function n(e){const r=function(){const e=Math.floor(2*Math.random());let t;return 0===e?t="row":1===e&&(t="col"),[Math.floor(Math.random()*(o+1)),Math.floor(Math.random()*(o+1)),t]}(),s=[r[0],r[1]],a=r[2];try{t.placeShip(e,s,a)}catch{n(e)}}n(5),n(4),n(3),n(3),n(2);for(let t=0;t<r.length;t+=1)for(let o=0;o<r.length;o+=1){const n=document.createElement("div");n.classList.add(r[t][o][0]),n.classList.add(JSON.stringify([t,o])),e.appendChild(n)}};return{getPlayer1:s,getPlayer2:a,gameOver:m,declareWinner:f,playRound:L,playComputerRound:S,switchController:h,HTMLBoardSetUp:C,placeComputerShipsRandom:B,playGame:()=>{C(),B()}}}},235:(e,t,o)=>{const r=o(834);e.exports=()=>{const e=(()=>{const e=[];for(let t=0;t<15;t+=1){const t=[];for(let e=0;e<15;e+=1){const e=["empty"];t.push(e)}e.push(t)}return e})(),t=()=>e,o=[],n=()=>o;return{getGrid:t,getShips:n,placeShip:(n,s,a="row")=>{if(((t,o,r)=>{let n=o[0],s=o[1];if("row"===r){const o=s+t-1;for(;s<=o;){if("o"===e[n][s][0])return!0;s+=1}}else if("col"===r){const o=n+t-1;for(;n<=o;){if("o"===e[n][s][0])return!0;n+=1}}return!1})(n,s,a))throw new Error("Space is already occupied");const i=((e,o,r,n)=>{if(t()[o[0]][o[1]]=["o"],n.getShipCoords().push(o),"row"===r){let r=o[1]+1;for(;r<o[1]+e;)t()[o[0]][r]=["o"],n.getShipCoords().push([o[0],r]),r+=1}else if("col"===r){let r=o[0]+1;for(;r<o[0]+e;)t()[r][o[1]]=["o"],n.getShipCoords().push([r,o[1]]),r+=1}return n})(n,s,a,r(n));return o.push(i),i},receiveAttack:t=>{let r=!1;for(let n=0;n<o.length;n+=1){const s=o[n];for(let o=0;o<s.getShipCoords().length;o+=1){const n=s.getShipCoords()[o];JSON.stringify(t)===JSON.stringify(n)&&(s.hit(),e[t[0]][t[1]]=["x"],r=!0)}}r||(e[t[0]][t[1]]=["."])},allShipsSunk:()=>{for(let e=0;e<o.length;e+=1)if(!o[e].isSunk())return!1;return!0},getShipIdxfromGridCoords:e=>{for(let t=0;t<n().length;t+=1){const o=n()[t];for(let r=0;r<o.getShipCoords().length;r+=1){const n=o.getShipCoords()[r];if(JSON.stringify(e)===JSON.stringify(n))return t}}return null}}}},112:(e,t,o)=>{const r=o(235);e.exports=(e="player")=>{const t=r(),o=e;return{getGameBoard:()=>t,getPlayerType:()=>o}}},834:e=>{e.exports=(e=1)=>{const t=e;let o=0;const r=()=>t,n=()=>o,s=[];return{getLength:r,getHitNum:n,isSunk:()=>n()>=r(),hit:()=>{var e;e=n()+1,o=e},getShipCoords:()=>s,getShipTypeLength:e=>{let t;return"carrier"===e?t=5:"battleship"===e?t=4:"cruiser"===e||"submarine"===e?t=3:"destroyer"===e&&(t=2),t}}}}},t={};(function o(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,o),s.exports})(118)().playGame()})();